# Generated by Django 5.1.4 on 2024-12-14 14:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Test', '0008_deviceplacementmethod_devicetype_software_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='HardwareType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Тип аппаратного обеспечения')),
            ],
            options={
                'verbose_name': 'Тип аппаратного обеспечения',
                'verbose_name_plural': 'Типы аппаратного обеспечения',
                'db_table': 'HardwareType',
            },
        ),
        migrations.AddField(
            model_name='software',
            name='device',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.RESTRICT, related_name='software', to='Test.device', verbose_name='Оборудование'),
        ),
        migrations.AddField(
            model_name='software',
            name='type',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.RESTRICT, to='Test.softwaretype', verbose_name='Тип оборудования'),
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelName', models.CharField(default='', max_length=30, null=True, verbose_name='Модель')),
                ('price', models.DecimalField(decimal_places=2, default=None, max_digits=15, null=True, verbose_name='Закупочная цена')),
                ('inventoryNumber', models.CharField(default=None, max_length=20, null=True, verbose_name='Инвентарный номер')),
                ('factoryNumber', models.CharField(default=None, max_length=20, null=True, verbose_name='Заводской номер')),
                ('purchaseDate', models.DateField(default=None, null=True, verbose_name='Дата покупки')),
                ('installationDate', models.DateField(default=None, null=True, verbose_name='Дата установки')),
                ('warrantyExpirationDate', models.DateField(default=None, null=True, verbose_name='Дата окончания гарантии')),
                ('device', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='hardware', to='Test.device', verbose_name='Оборудование')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='Test.hardwaretype', verbose_name='Тип аппаратного обеспечения')),
            ],
            options={
                'verbose_name': 'Аппаратное обеспечение',
                'verbose_name_plural': 'Аппаратное обеспечение',
                'db_table': 'Hardware',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(default=None, max_length=100, verbose_name='Тип действия')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание действия')),
                ('action_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата выполнения действия')),
                ('contractor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='maintenance_actions', to='Test.individualentity', verbose_name='Исполнитель')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_actions', to='Test.device', verbose_name='Оборудование')),
                ('hardware', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_actions', to='Test.hardware', verbose_name='Аппаратное обеспечение')),
            ],
            options={
                'verbose_name': 'Действие по ремонту и обслуживанию',
                'verbose_name_plural': 'Действия по ремонту и обслуживанию',
                'db_table': 'MaintenanceAction',
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('device__isnull', False), ('hardware__isnull', True)), models.Q(('device__isnull', True), ('hardware__isnull', False)), _connector='OR'), name='device_or_hardware_only')],
            },
        ),
    ]
